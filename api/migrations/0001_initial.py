# Generated by Django 3.1.7 on 2021-04-12 06:05

import api.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('phone_num', models.CharField(max_length=10, null=True)),
                ('is_student', models.BooleanField(default=False)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_technician', models.BooleanField(default=False)),
                ('is_chef', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', api.models.CustomUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Building',
            fields=[
                ('building_id', models.AutoField(primary_key=True, serialize=False)),
                ('building_name', models.CharField(max_length=50)),
                ('location', models.CharField(max_length=50)),
                ('phone_num', models.CharField(max_length=10)),
                ('year_level', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='api.customuser')),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='api.customuser')),
                ('year_of_study', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('room_id', models.AutoField(primary_key=True, serialize=False)),
                ('room_no', models.CharField(max_length=10)),
                ('building_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.building')),
                ('student_id', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.student')),
            ],
        ),
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('staff_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='api.staff')),
                ('department', models.CharField(max_length=100)),
            ],
            bases=('api.staff',),
        ),
        migrations.CreateModel(
            name='Chef',
            fields=[
                ('staff_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='api.staff')),
                ('position', models.CharField(choices=[('LINE', 'LINE'), ('SOUS', 'SOUS'), ('HEAD', 'HEAD')], default='LINE', max_length=10)),
            ],
            bases=('api.staff',),
        ),
        migrations.CreateModel(
            name='Technician',
            fields=[
                ('staff_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='api.staff')),
                ('specialization', models.CharField(max_length=100)),
            ],
            bases=('api.staff',),
        ),
        migrations.CreateModel(
            name='Package',
            fields=[
                ('package_id', models.AutoField(primary_key=True, serialize=False)),
                ('date_recieved', models.DateField(auto_now_add=True)),
                ('student_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.student')),
            ],
        ),
        migrations.CreateModel(
            name='MaintenanceRequest',
            fields=[
                ('request_id', models.AutoField(primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=200)),
                ('submit_date_time', models.DateTimeField(auto_now_add=True)),
                ('date_time_resolved', models.DateTimeField(null=True)),
                ('status', models.CharField(choices=[('RESOLVED', 'RESOLVED'), ('IN PROGRESS', 'IN PROGRESS'), ('UNRESOLVED', 'UNRESOLVED')], default='UNRESOLVED', max_length=50)),
                ('urgency_rating', models.CharField(choices=[('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5')], default='1', max_length=20)),
                ('room_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='room', to='api.room')),
                ('student_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.student')),
            ],
        ),
        migrations.CreateModel(
            name='FoodOrder',
            fields=[
                ('food_order_id', models.AutoField(primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=100)),
                ('submit_date_time', models.DateTimeField(auto_now_add=True)),
                ('date_time_fulfilled', models.DateTimeField(null=True)),
                ('status', models.CharField(choices=[('FULFILLED', 'FULFILLED'), ('IN PROGRESS', 'IN PROGRESS'), ('UNFULFILLED', 'UNFULFILLED')], default='UNFULFILLED', max_length=20)),
                ('student_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.student')),
            ],
        ),
        migrations.CreateModel(
            name='Complaint',
            fields=[
                ('complaint_id', models.AutoField(primary_key=True, serialize=False)),
                ('submit_date_time', models.DateTimeField(auto_now_add=True)),
                ('problem_description', models.CharField(max_length=200)),
                ('resolution_description', models.CharField(max_length=200)),
                ('date_time_resolved', models.DateTimeField(null=True)),
                ('urgency_rating', models.CharField(choices=[('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5')], default='1', max_length=20)),
                ('status', models.CharField(choices=[('RESOLVED', 'RESOLVED'), ('IN PROGRESS', 'IN PROGRESS'), ('UNRESOLVED', 'UNRESOLVED')], default='UNRESOLVED', max_length=20)),
                ('staff_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.staff')),
                ('student_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.student')),
            ],
        ),
        migrations.AddConstraint(
            model_name='room',
            constraint=models.UniqueConstraint(fields=('building_id', 'room_no'), name='room_constraint'),
        ),
        migrations.AddField(
            model_name='maintenancerequest',
            name='technician_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.technician'),
        ),
        migrations.AddField(
            model_name='foodorder',
            name='chef_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.chef'),
        ),
    ]
